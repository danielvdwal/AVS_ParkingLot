package de.fh_koeln.avs.clustermanager.view;

import com.hazelcast.config.Config;
import com.hazelcast.core.Hazelcast;
import com.hazelcast.core.HazelcastInstance;
import com.hazelcast.core.ITopic;
import com.hazelcast.core.Message;
import com.hazelcast.core.MessageListener;
import de.fh_koeln.avs.global.ImageData;
import java.awt.image.BufferedImage;
import java.awt.image.DataBufferByte;
import javax.swing.ImageIcon;

/**
 *
 * @author Daniel van der Wal
 */
public class MainView extends javax.swing.JFrame {

    private final ImageCapturerMessageReceiver messageReceiver;
    private final HazelcastInstance hz;
    private final ITopic topic;
    private String registrationId;

    /**
     * Creates new form MainView
     */
    public MainView() {
        initComponents();
        messageReceiver = new ImageCapturerMessageReceiver();
        hz = Hazelcast.newHazelcastInstance(new Config());
        topic = hz.getTopic("ImageCapturer");
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        subToImageCapturingButton = new javax.swing.JToggleButton();
        image = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        subToImageCapturingButton.setText("Subscribe to ImageCapturing");
        subToImageCapturingButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                subToImageCapturingButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(subToImageCapturingButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(image, javax.swing.GroupLayout.DEFAULT_SIZE, 382, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(5, 5, 5)
                        .addComponent(image, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(subToImageCapturingButton)
                        .addGap(0, 415, Short.MAX_VALUE)))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void subToImageCapturingButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_subToImageCapturingButtonActionPerformed
        if (subToImageCapturingButton.isSelected()) {
            subToImageCapturingButton.setText("Unsub from ImageCapturer");
            registrationId = topic.addMessageListener(messageReceiver);
        } else {
            subToImageCapturingButton.setText("Sub to ImageCapturer");
            topic.removeMessageListener(registrationId);
        }
    }//GEN-LAST:event_subToImageCapturingButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            new MainView().setVisible(true);
        });
    }

    private class ImageCapturerMessageReceiver implements MessageListener<ImageData> {

        @Override
        public void onMessage(Message<ImageData> message) {
            ImageData imageData = message.getMessageObject();
            BufferedImage img = new BufferedImage(imageData.getWidth(), 
                    imageData.getHeight(), imageData.getImageType());
            byte[] data = ((DataBufferByte)img.getRaster().getDataBuffer()).getData();
            System.arraycopy(imageData.getData(), 0, data, 0, imageData.getData().length);
            image.setIcon(new ImageIcon(img));
            repaint();
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel image;
    private javax.swing.JToggleButton subToImageCapturingButton;
    // End of variables declaration//GEN-END:variables
}
